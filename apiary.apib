FORMAT: 1A
HOST: http://www.google.com

# TeamMachine
Team Machine

# Group Projects
Notes related resources of the **Projects API**


## TeamMachine API [/]
The API Entry point - Main node;
No attributes - only root API affordances

### Affordances
+ 'show' ('self') ... API entry point
+ 'projects' ... Lists all projects
+ 'person' ... Lists all 'people'
+ 'skills' ... Contains all skills
+ 'roles' ... Contains all roles, 

### Retrieve API Root [GET]
+ Response 200 (application/json)

        {
            "self": {"href": "/"},
            "projects": {"href": "/projects"},
            "profiles": {"href": "/profiles"},
            "roles": {"href": "/roles"},
            "skills": {"href": "/skills"}
        }





## Profile Collection [/profiles]
All profiles are stored here with unique identifiers


## Profiles [/profiles/{id}]

### Attributes
+ 'ID' ... ID of the profile, server assigned
+ 'Name' ... profile name
+ 'Email' ... profile email
+ 'location' ... user location
+ 'skills' ... user skills
+ 'Pic' ... string representation of picture?
+ 'projects' ... projects user is involved in currently
+ 'bio' ... short profile bio
+ 'prevProj' ... previous projects the user has been involved in

### Affordances
+ 'show' ('self') ... A single profile object
+ 'edit' ... Update or delete a profile

+ Parameters
    + id (required, int, `1`) ... id of the profile to retrieve

+ Model
        
### Retrieve a profile [GET]
+ Response 200 (application/json)

        {
            "id": 1,
            "name": "nick",
            "email":"n@m.co",
            "location":"?",
            "skills":["lasers","cannons","Lasercannons","kitten cannons","Canonical References"]
            "pic":"STRINGREPRESENTATIONOFANIMAGEGOESHEREBUTIDON'THAVEONE"
            "projects":["ProjectID1","ProjectID2","ProjectID4"]
            "bio":"thisisabio"
            "prevProj":["ProjectID3","ProjectID5"]
        }



## Roles Collection [/roles]
Collection of all roles

### Attributes


### Affordances


### Retrieve a profile [GET]
 + Response 200 (application/json)
 









## Skills Collection [/skills]
Master list of all skills

###Attributes
+ 'id' ... ID of the skill, server assigned

###Affordances
+ 'show' ('self') ... Show all skills

+ Model (application/json)

### Get all skills [GET]

+ Response 200 (application/json)












## Project Collection [/projects]
All projects are stored here with unique identifiers

###Attributes
+ 'id' ... ID of the project, server assigned

###Affordances
+ 'show' ('self') ... Show all projects

+ Model (application/json)

### Get all projects [GET]
+ Response 200 (application/json)

        [
            {
                "id": 1,
                "title": "LaserCannons",
                "description":"It will be large and destructive",
                "compentencies":["lasers","cannons"]
            },
            {
                "id": 2,
                "title": "KittenCannons",
                "description":"It will be small and fluffy",
                "compentencies":["kittens","cannons"]
            }
        ]


## Projects [/projects/{id}]
Where all the uncool projects are.

### Attributes
+ 'id' ... ID of the project, server assigned
+ 'name' ... Name of the project
+ 'subName' ... Tag line for the project
+ 'description' ... Description of the project
+ 'meta' ... Catch all


###Affordances
+ 'show' ('self') ... A single project
+ 'edit' ... Update or delete a project

+ Parameters
    + id (optional, int, `1`) ... Numeric `id` of the folder to perform action with. Has example value.
    
+ Model (application/json)
       
### Retrieve a single project [GET]
+ Response 200 (application/json)

        [
            {
                "id": 1,
                "title": "LaserCannons",
                "description":"It will be large and destructive",
                "compentencies":["lasers","cannons"]
            }
        ]

### Create a Project [POST]
+ Request (application/json)

        { 
            "title": "Buy cheese and bread for breakfast." }

+ Response 201 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }

