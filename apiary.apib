FORMAT: 1A
HOST: http://www.google.com

# TeamMachine
Team Machine

# Group Projects
Notes related resources of the **Projects API**


## TeamMachine API [/]
The API Entry point - Main node;
No attributes - only root API affordances

### Affordances
+ 'show' ('self') ... API entry point
+ 'projects' ... Lists all projects
+ 'profiles' ... Lists all profiles

### Retrieve API Root [GET]
+ Response 200 (application/json)

        {
            "projects": {"href": "/projects"}
        }


## Profile Collection [/profiles]
All profiles are stored here with unique identifier


## Profiles [/profiles/{id}]

### Attributes
+ 'id' ... ID of the profile, server assigned
+ 'profName' ... profile name
+ 'profEmail' ... profile email

### Affordances
+ 'show' ('self') ... A single profile object
+ 'edit' ... Update or delete a profile

+ Parameters
    + id (required, int, `1`) ... id of the profile to retrieve
    









## Project Collection [/projects]



## Projects [/projects/{id}]
Where all the uncool projects are.

### Attributes
+ 'id' ... ID of the project, server assigned
+ 'projName' ... Name of the project
+ 'subName' ... Tag line for the project
+ 'description' ... Description of the project
+ 'meta' ... Catch all


###Affordances
+ 'show' ('self') ... A single project
+ 'edit' ... Update or delete a project

+ Parameters
    + id (optional, int, `1`) ... Numeric `id` of the folder to perform action with. Has example value.
    
+ Model (application/json)

        [
            {
                "id": 1,
                "projName": "LaserCannons",
                "subName":"It will be large and destructive",
                "description":"testingadescriptionhere",
                "compentencies":["lasers","cannons"]
            },{
                "id": 2, 
                "projName": "HelpingKittens",
                "subName":"Its kittens!",
                "description":"THISISANOTHERDESCRIPTION",
                "compentencies":["kittens","helping"]
            }
        ]

       
       
### Retrieve a single project [GET]
+ Response 200 (application/json)

        [
            {
                "id": 1,
                "title": "LaserCannons",
                "description":"It will be large and destructive",
                "compentencies":["lasers","cannons"]
            }
        ]

### Create a Project [POST]
+ Request (application/json)

        { 
            "title": "Buy cheese and bread for breakfast." }

+ Response 201 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }

